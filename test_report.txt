
> react-typescript-starter@0.1.0 test
> react-scripts test "--coverage"

FAIL src/arrays.test.ts
  ● Console

    console.log
      [ 1, 2, 3 ]

      at makeMath (src/arrays.ts:97:13)

  ● Testing the array functions › Testing the bookEndList function

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 1

      Array [
        1,
    +   2,
        3,
      ]

      36 |
      37 |     test("Testing the bookEndList function", () => {
    > 38 |         expect(bookEndList(NUMBERS_1)).toEqual([1, 3]);
         |                                        ^
      39 |         expect(bookEndList(NUMBERS_2)).toEqual([100, 200]);
      40 |         expect(bookEndList(NUMBERS_3)).toEqual([5, 5]);
      41 |         expect(bookEndList(NUMBERS_4)).toEqual([]);

      at Object.<anonymous> (src/arrays.test.ts:38:40)

  ● Testing the array functions › Testing the stringsToIntegers function

    expect(received).toEqual(expected) // deep equality

    - Expected  - 2
    + Received  + 2

      Array [
        100,
    -   0,
    +   NaN,
        27,
    -   0,
    +   NaN,
      ]

      81 |         expect(stringsToIntegers(VALUES_3)).toEqual([5]);
      82 |         expect(stringsToIntegers(VALUES_4)).toEqual([]);
    > 83 |         expect(stringsToIntegers(VALUES_5)).toEqual([100, 0, 27, 0]);
         |                                             ^
      84 |         expect(stringsToIntegers(VALUES_6)).toEqual([-1, 0, 1, 0]);
      85 |         expect(stringsToIntegers(VALUES_7)).toEqual([0, 0, 0]);
      86 |     });

      at Object.<anonymous> (src/arrays.test.ts:83:45)

  ● Testing the array functions › Testing the removeDollars function

    expect(received).toEqual(expected) // deep equality

    - Expected  - 3
    + Received  + 3

      Array [
    -   1,
    -   2,
    -   3,
    +   NaN,
    +   NaN,
    +   NaN,
      ]

      112 |
      113 |     test("Testing the removeDollars function", () => {
    > 114 |         expect(removeDollars(AMOUNTS_1)).toEqual([1, 2, 3]);
          |                                          ^
      115 |         expect(removeDollars(AMOUNTS_2)).toEqual([100, 200, 300, 400]);
      116 |         expect(removeDollars(AMOUNTS_3)).toEqual([5]);
      117 |         expect(removeDollars(AMOUNTS_4)).toEqual([0]);

      at Object.<anonymous> (src/arrays.test.ts:114:42)

  ● Testing the array functions › Testing the shoutIfExclaiming function

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 1

      Array [
        "Hello",
        "you",
        "are",
    -   "GREAT!",
    +   "great!",
      ]

      144 |
      145 |     test("Testing the shoutIfExclaiming function", () => {
    > 146 |         expect(shoutIfExclaiming(MESSAGE_1)).toEqual([
          |                                              ^
      147 |             "Hello",
      148 |             "you",
      149 |             "are",

      at Object.<anonymous> (src/arrays.test.ts:146:46)

  ● Testing the array functions › Testing the allRGB function

    expect(received).toEqual(expected) // deep equality

    Expected: true
    Received: false

      238 |
      239 |     test("Testing the allRGB function", () => {
    > 240 |         expect(allRGB(COLORS_1)).toEqual(true);
          |                                  ^
      241 |         expect(allRGB(COLORS_2)).toEqual(true);
      242 |         expect(allRGB(COLORS_3)).toEqual(true);
      243 |         expect(allRGB(COLORS_4)).toEqual(false);

      at Object.<anonymous> (src/arrays.test.ts:240:34)

  ● Testing the array functions › Testing the makeMath function

    expect(received).toEqual(expected) // deep equality

    Expected: "6=1+2+3"
    Received: ""

      253 |
      254 |     test("Testing the makeMath function", () => {
    > 255 |         expect(makeMath(NUMBERS_1)).toEqual("6=1+2+3");
          |                                     ^
      256 |         expect(makeMath(NUMBERS_2)).toEqual("600=100+300+200");
      257 |         expect(makeMath(NUMBERS_3)).toEqual("5=5");
      258 |         expect(makeMath(NUMBERS_4)).toEqual("0=0");

      at Object.<anonymous> (src/arrays.test.ts:255:37)

  ● Testing the array functions › Testing the injectPositive function

    expect(received).toEqual(expected) // deep equality

    - Expected  - 1
    + Received  + 1

      Array [
    +   3,
        1,
        2,
        3,
    -   6,
      ]

      263 |     // injectPositive
      264 |     test("Testing the injectPositive function", () => {
    > 265 |         expect(injectPositive(NUMBERS_1)).toEqual([1, 2, 3, 6]);
          |                                           ^
      266 |         expect(injectPositive(NUMBERS_2)).toEqual([100, 300, 200, 600]);
      267 |         expect(injectPositive(NUMBERS_3)).toEqual([5, 5]);
      268 |         expect(injectPositive(NUMBERS_4)).toEqual([0]);

      at Object.<anonymous> (src/arrays.test.ts:265:43)

  ● Testing the array functions › Testing the injectPositive function

    expect(received).toEqual(expected) // deep equality

    - Expected  - 0
    + Received  + 1

      Array [
    +   3,
        1,
        2,
        3,
      ]

      26 |     // If you fail these, you aren't using map/filter/reduce/etc. properly!
      27 |     afterEach(() => {
    > 28 |         expect(NUMBERS_1).toEqual([1, 2, 3]);
         |                           ^
      29 |         expect(NUMBERS_2).toEqual([100, 300, 200]);
      30 |         expect(NUMBERS_3).toEqual([5]);
      31 |         expect(NUMBERS_4).toEqual([]);

      at Object.<anonymous> (src/arrays.test.ts:28:27)

PASS src/HtmlCss.test.tsx
PASS src/functions.test.ts
PASS src/text.test.tsx
PASS src/App.test.tsx
--------------|---------|----------|---------|---------|-------------------
File          | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s 
--------------|---------|----------|---------|---------|-------------------
All files     |   91.66 |       85 |   95.65 |   91.11 |                   
 App.tsx      |     100 |      100 |     100 |     100 |                   
 arrays.ts    |   87.09 |       50 |   93.75 |   85.71 | 9,12,137-140      
 functions.ts |     100 |      100 |     100 |     100 |                   
--------------|---------|----------|---------|---------|-------------------

Test Suites: 1 failed, 4 passed, 5 total
Tests:       7 failed, 16 passed, 23 total
Snapshots:   0 total
Time:        3.178 s
Ran all test suites.
